{"first_table":"01 데이터와 정보", "second_table":"(1) 데이터의 정의", "third_table":"① 데이터의 정의", "contents":"- ■ 데이터(Data)는 라틴어 'dare(주다)', 'Datum(주어진 것, 선물, 자료)'에서 왔으며, 보통 연구나 조\n- 사 등의 바탕이 되는 재료 혹은 자료를 의미한다.\n- 1646년 영국 문헌에서 처음으로 등장한 데이터는, 추상적이고 관념적인 개념이었다가 1900년대 중\n- 반 컴퓨터의 시대가 도래하면서 그 의미가 기술적이고 사실적인 의미의 '자료'로 변화하였다."}
{"first_table":"01 데이터와 정보", "second_table":"(1) 데이터의 정의", "third_table":"② 데이터의 특성", "contents":"- ■ 데이터는 있는 그대로의 사실, 예를 들어 수학 80점, 영어 100점과 같이 가공되지 않은 자료, 즉 객\n- 관적인 사실을 의미한다.\n- . 정보는 이러한 데이터로부터 얻은 것으로 '수학과 영어 점수의 평균은 90점'과 같이 가공된 자료를\n- 의미한다.\n- '있는 그대로의 사실'을 나타내는 것을 데이터의 존재적 특성이라 하며, 후자와 같이 '추론 · 예측 · 전\n- 망 · 추정을 위한 정보의 근거'가 될 수 있는 것을 데이터의 당위적 특성이라고 한다.\n【 데이터의 특성 】\n| 구분 | 형태 | 예 |\n| --- | --- | --- |\n| 존재적 특성 | 데이터는 있는 그대로의 객관적 사실 | 수학 80점, 영어 100점 |\n| 당위적 특성 | 데이터는 추론 · 예측 · 전망 · 추정을 위한 근거 | 평균 90점 |"}
{"first_table":"01 데이터와 정보", "second_table":"(2) 데이터의 유형", "third_table":"① 정성적 데이터와 정량적 데이터", "contents":"- 정성적 데이터: 언어와 문자 등을 예로 들 수 있다. 수학시간에 배운 집합을 예로 들어보면, 정성적 데\n- 이터는 집합으로 표현할 수 없다. 정성적 데이터는 이처럼 기준이 명확하지 않은 데이터를 의미한다.\n- 정량적 데이터: 정량적 데이터는 수치, 도형, 기호 등을 예로 들 수 있으며, 집합으로 표현할 수 있는\n- 기준이 명확한 데이터를 의미한다.\n# 【 정성적 데이터와 정량적 데이터 】\n| 구분 | 형태 | 예 |\n| --- | --- | --- |\n| 정성적 데이터 | 언어, 문자 등 | 문자 텍스트, 언어, 문자 |\n| 정량적 데이터 | 수치, 도형, 기호 등 | 30cm, 정육면체, 3시 방향 등 |"}
{"first_table":"01 데이터와 정보", "second_table":"(2) 데이터의 유형", "third_table":"② 정형 데이터와 비정형 데이터, 그리고 반정형 데이터", "contents":"- 정형 데이터: 고정된 틀을 가지고 있으면서 연산이 가능한 데이터다. 주로 다음 장에서 보게 될 관계\n- 형 데이터베이스(이하 DB)에 저장하며, 데이터의 수집과 관리가 용이하다.\n- ■ 비정형 데이터: 고정된 틀이 존재하지 않고 연산이 불가능하다. 따라서 수집과 관리가 어려우며 일반\n- 적으로 관계형 DB가 아닌 NoSQL(Not only SQL) DB에 저장된다.\n- ■ 반정형 데이터: 고정된 형태는 있지만 연산이 불가능하다. 수집과 관리가 쉽지는 않으며 일반적으로\n- 테이블 형태보다는 파일 형태로 저장한다. 반정형 데이터는 가공을 거쳐 정형 데이터로 변환이 가능\n- 하다.\n【 정형 데이터, 비정형 데이터, 반정형 데이터 】\n| 구분 | 특징 | 예 |\n| --- | --- | --- |\n| 정형 데이터 | 정형화된 틀이 있고 연산이 가능 | CSV, 엑셀 스프레드시트 등 |\n| 비정형 데이터 | 정형화된 틀이 없고 연산이 불가능 | 소셜 데이터, 댓글, 영상, 음성 등 |\n| 반정형 데이터 | 형태는 있지만 연산이 불가능 | XML, JSON, 센서 데이터 등 |"}
{"first_table":"01 데이터와 정보", "second_table":"(2) 데이터의 유형", "third_table":"③ 암묵지와 형식지", "contents":"- 암묵지(���, Tacit Knowledge): '학습과 체험을 통해 개인에게 TIP\n- 습득되어 있지만, 겉으로 드러나지 않는 상태의 지식'을 말한다. 머릿\n- 속에 존재하는 지식으로, 언어나 문자를 통해 나타나지 않는 지식이\n- 다. 또한 암묵지는 대개 시행착오와 같은 경험을 통해 체득하는 경우가 많다.\n암묵지와 형식지의 기본 개념과\n상호작용을 묻는 문제가 종종 시험에\n등장합니다.\n- 형식지(���, Explicit Knowledge): '암묵지가 문서나 매뉴얼처럼 외부로 표출돼 여러 사람이\n- 공유할 수 있는 지식'을 말한다. 교과서, 데이터베이스, 신문, 비디오와 같이 어떤 형태로든 형상화된\n- 지식은 형식지라고 할 수 있다.\n- 암묵지와 형식지의 상호작용: 공유화되기 어려운 암묵지가 형식지로 표출되고 연결되면 그 상호작\n- 용으로 지식이 형성된다. 개인에게 내면화된 암묵지가 조직의 지식으로 공통화되기 위해서는(형식\n- 지가 되기 위해서는) 표출화하고 이를 다시 개인의 지식으로 연결화하는 과정을 거치게 된다. 이는\n- 다시 개인에게 내면화되는 과정을 거친다.\n【 암묵지와 형식지의 상호작용 】\n| 암묵지 | (1) 내면화(Internalization) | 개인이 보유한 경험과 지식을 요령이나 노하우로 고도화시키는 과정 |\n| --- | --- | --- |\n| 암묵지 | (2) 공통화(Socialization) | 개인이 다른 개인이나 집단과의 공통적 지식을 생성하는 과정 |\n| 형식지 | (3) 표출화(Externalization) | 개인이 보유한 경험, 지식 등을 책이나 문서 등 외부로 표출하는 과정 |\n| 형식지 | (4) 연결화(Combination) | 개인이 보유한 경험과 외부의 지식을 연결하는 과정 |"}
{"first_table":"01 데이터와 정보", "second_table":"2. 데이터와 정보", "third_table":"① 데이터에서 지혜를 얻는 과정", "contents":"- ■ 데이터(Data): 개별 데이터 자체는 의미가 중요하지 않은 객관적인 사실을 말한다.\n- . 정보(Information): 데이터의 가공 · 처리와 데이터 간 연관 관계 속에서 의미가 도출된 것을 말한\n- 다. 하지만 정보가 내포하는 의미는 유용하지 않을 수 있다.\n- 지식(Knowledge): 데이터를 통해 도출된 다양한 정보를 구조화하여 유의미한 정보를 분류하고 개\n- 인적인 경험을 결합해 고유의 지식으로 내재화된 것을 말한다.\n- 지혜(Wisdom) : 지식의 축적과 아이디어가 결합된 창의적 산물이다.\n# DIKW 피라미드\n# 【 DIKW 피라미드 】\nTIP DIKW 피라미드는 시험에 출제될 가능성\n이 높으며, Information을 Insight로 속여서 출\n제한 적이 있습니다.\n지혜: A의 다른 물건도 저렴할 것이다.\nWISDOM\n지식: 더 저렴한 A로부터 연필을 사야겠다.\nKNOWLEDGE\n정보: A 연필이 더 저렴하다.\nINFORMATION\n데이터: A는 100원, B는 200원에 연필을 판매한다.\nDATA"}
{"first_table":"01 데이터와 정보", "second_table":"(2) 데이터에 관한 상식", "third_table":"비트와 바이트", "contents":"- ■ 비트(bit): '0'과 '1'의 두 가지 값으로 신호를 나타내는 최소 단위. 이진수를 뜻하는 'binary digit'의\n- 약자.\n- 바이트(byte): 8개의 비트로 구성된 데이터의 양을 나태내는 단위. 1바이트로는 숫자와 영어의 한\n- 글자를 표현할 수 있다. 한글은 한 글자가 2바이트(byte) 크기를 갖는다."}
{"first_table":"01 데이터와 정보", "second_table":"(2) 데이터에 관한 상식", "third_table":"데이터 단위", "contents":"- 1바이트(byte) = 8비트(bit)\nTIP 데이터의 단위를 순서대로 나열하는 문제가\n자주 출제되었습니다.\n- . 1킬로바이트(KB) = 1024바이트(byte)\n- 1메가바이트(MB) = 1024킬로바이트(KB)\n- 1기가바이트(GB) = 1024메가바이트(MB)\n- 1테라바이트(TB) = 1024기가바이트(GB)\n- 1페타바이트(PB) = 1024테라바이트(TB)\n- 1엑사바이트(EB) = 1024페타바이트(PB)\n- 1제타바이트(ZB) = 1024엑사바이트(EB)\n- 1요타바이트(YB) = 1024제타바이트(ZB)"}
{"first_table":"02 데이터베이스", "second_table":"(1) 데이터베이스 정의", "third_table":"① 데이터베이스 용어의 연혁", "contents":"- 1950년대: 미군에서 군수물자를 관리하기 위해 수집된 자료를 일컫는 '데이터(Data)'와 '기지\n- (Base)'의 합성어로 데이터베이스(Database)라는 용어가 처음 등장했다.\n- 1963년 데이터베이스 용어를 공식적으로 사용: 1963년 미국 SDC(System Development\n- Corporation)가 개최한 심포지엄에서 '대량의 데이터를 축적하는 기지'라는 개념으로 데이터베이스\n- 라는 용어가 공식적으로 처음 사용됐다. 같은 해 GE의 C. 바크만은 최초로 현대적 의미의 데이터베\n- 이스 관리 시스템인 IDS를 개발했다. 이후 저장장치에 직접 접근하기 위한 다양한 데이터 모델과 데\n- 이터베이스 관리 시스템이 개발됐다.\n- 우리나라에서 처음 사용: 우리나라에서는 1975년 미국의 CAC(Chemical Abstracts Condensates)\n- 가 한국과학기술정보센터(KORSTIC)를 통해 데이터베이스를 처음 시작한 것이 그 시초다."}
{"first_table":"02 데이터베이스", "second_table":"(1) 데이터베이스 정의", "third_table":"② 데이터베이스의 다양한 정의", "contents":"- EU의 '데이터베이스의 법적 보호에 관한 지침': 데이터베이스란 체계적이거나 조직적으로 정리되고\n- 전자식 또는 기타 수단으로 개별적으로 접근할 수 있는 독립된 저작물, 데이터 또는 기타 소재의 수\n- 집물이다.\n- 우리나라의 '저작권법': 데이터베이스란 소재를 체계적으로 배열 또는 구성한 편집물로서 개별적으로\n- 그 소재에 접근하거나 그 소재를 검색할 수 있게 한 것이다(법률적으로 기술 기반 저작물로 인정).\n- '컴퓨터용어사전', '정보통신용어사전(TTA)': 데이터베이스란 동시에 복수의 적용 업무를 지원할 수\n- 있게 복수 이용자의 요구에 대응해서 데이터를 받아들이고 저장 · 공급하기 위해 일정한 구조에 따라\n- 편성된 데이터의 집합이다.\n- '위키피디아': 데이터베이스란 체계적으로 정렬된 데이터 집합을 의미한다. 데이터 양과 이용이 늘어\n- 나면서 데이터베이스는 대용량의 데이터를 저장 · 관리 · 검색 · 이용할 수 있는 컴퓨터 기반의 데이\n- 터베이스로 진화했다.\n- '한국데이터산업진흥원': 데이터베이스란 문자, 기호, 음성, 화상, 영상 등 상호 관련된 다수의 콘텐\n- 츠를 정보처리 및 정보통신기기에 의하여 체계적으로 수집 월 축적하여 다양한 용도와 방법으로 이용\n- 할 수 있게 정리한 정보의 집합체를 의미한다. 여기서 콘텐츠란 다양한 의미 전달 매체에 의해 표현\n- 된 데이터, 정보, 지식, 저작물 등의 인식 가능한 모든 자료를 의미한다. て??\n【 DB와 DBMS 】\nTIP 콘텐츠(Contents)는 41회차 시험에서\n처음으로 등장하였습니다.\n| DB System | DB (Data-Base) | 체계적으로 수집 · 축적하여 다양한 용도와 방법으로 이용 할 수 있게 정리한 정보의 집합체 |\n| --- | --- | --- |\n| DB System | DBMS (Data-Base Management System) | 이용자가 쉽게 데이터베이스를 구축 - 유지할 수 있게 하는 관리 소프트웨어 |"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스의 특징", "third_table":"① 데이터베이스의 일반적인 특징", "contents":"- 통합된 데이터(Integrated data): 동일한 내용의 데이터가 중복되지 않게 통합되어 있다.\n- 저장된 데이터(Stored data): 컴퓨터 기술을 바탕으로 컴퓨터가 접근할 수 있는 저장 매체에 저장\n- 되어 있다.\n- 공용 데이터(Shared data): 여러 사용자가 서로 다른 목적으로 데이터베이스의 데이터를 공동으로\n- 이용할 수 있다. 일반적으로 대용량화되고 구조가 복잡하다.\n- 변화하는 데이터(Operational data, 운영 데이터): 새로운 데이터의 삽입. 기존 데이터의 수정 및\n- 삭제의 변화를 통해 항상 최신의 정확한 데이터 상태를 유지한다.\n【 데이터베이스의 일반적인 특징 】\n| 특징 | 내용 |\n| --- | --- |\n| 통합된 데이터 | 동일한 내용의 데이터가 중복되어 있지 않다. |\n| 저장된 데이터 | 컴퓨터 매체가 접근할 수 있는 저장 매체에 저장되어 있다. |\n| 공용 데이터 | 여러 사용자가 공유할 수 있다. |\n| 변화하는 데이터 | 삽입, 수정, 삭제를 통해 항상 최신의 정확한 데이터를 유지해야 한다. |"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스의 특징", "third_table":"② 데이터베이스의 다양한 측면에서의 특성", "contents":"TIP 데이터베이스의 다양한 측면에서의 특성\n은 헷갈리기 쉬우며, 또 시험에 종종 출제된 적\n이 있습니다.\n| 정보의 축적 및 전달 측면 | 기계 가독성: 대량의 정보를 일정한 형식에 따라 컴퓨터 등의 정보처리기기가 읽고 쓸 수 있다. ■ 검색 가능성: 다양한 방법으로 필요한 정보를 검색할 수 있다. ■ 원격 조작성: 정보통신망을 통해 원거리에서도 즉시 온라인으로 이용 가능하다. |\n| --- | --- |\n| 정보이용 측면 | · 이용자의 정보요구에 따라 다양한 정보를 신속하게 획득할 수 있고 원하는 정보를 정 확하고 경제적으로 찾아낼 수 있다. |\n| 정보관리 측면 | ■ 정보를 일정한 질서와 구조에 따라 정리 - 저장하고 검색 4 관리할 수 있게 하여 방대 한 양의 정보를 체계적으로 축적하고, 새로운 내용 추가나 갱신이 용이하다. |\n| 정보기술발전 측면 | ■ 데이터베이스는 정보처리, 검색 - 관리 소프트웨어, 관련 하드웨어, 정보 전송을 위한 네트워크 기술 등의 발전을 견인할 수 있다. |\n| 경제 · 산업적 측면 | ■ 데이터베이스는 다양한 정보를 필요에 따라 신속하게 제공 · 이용할 수 있는 인프라의 특성을 가지고 있어 경제, 산업, 사회 활동의 효율성을 제고하고 국민의 편의를 증진 하는 수단으로써의 의미를 가진다. |"}
{"first_table":"02 데이터베이스", "second_table":"(1) 데이터베이스 활용", "third_table":"① 기업 내부의 데이터베이스", "contents":"- ■ 인하우스 DB: 1990년대 정보통신망 구축이 가속화되면서 기업 경영 전반에 관한 모든 자료를 연계\n- 하여 일관된 체계로 구축 및 운영하는 데 중점을 두었다. 이후 경영 활동의 기반이 되는 전사자원관\n- 리시스템(ERP) 으로 확대됐다.\n- OLTP(Online Transaction Processing) 시스템: 1990년대 중반 이전, 정보의 수집과 이를 조\n- 직 내에서 공유하기 위한 경영정보시스템(MIS)과 생산 자동화, 통합 자동화 등 기업 활동에서 영역\n- 별로 구축되던 단순 자동화 중심의 시스템을 말한다.\n- OLAP(Online Analytical Processing) 시스템: 데이터 마이닝 등의 기술이 등장하면서 단순한\n- 정보의 '수집'과 '공유'에서 탈피하여 '분석'이 중심이 되는 시스템 구축으로 변화하게 되었는데, 이를\n- OLAP라 부른다.\nCRM과 SCM: 2000년에 들어서면서 기업 DB 구축의 화두는 CRM(Customer Relationship\nManagement, 고객관계관리)과 SCM(Supply Chain Management, 공급망관리)으로 변화했다.\n유통 · 판매 및 고객 데이터가 CRM과 연동되어 CRM과 SCM은 상호 밀접한 관련을 가지게 됐다.\n기업 내부 데이터베이스에 대해 자세히 알아보자!\n■ OLTP와 OLAP\nOLTP는 Transaction, 즉 거래 단위에 초점을 맞춘 개념이다. 예컨대 마트에서 물건을 구매하기 위해 결제하는 그 순\n간 혹은 은행에서 계좌 이체를 하는 그 순간에 맞춘 자동화된 데이터 처리 및 데이터 수집을 의미한다. OLAP는 분석\n이라는 Analytical의 의미 그대로 OLTP를 거쳐 적재된 데이터에 초점을 맞춰 데이터 분석을 통해 의사결정에 활용할\n수 있는 정보를 제공하는 것이 목적이다.\n| 유형 | 목적 | 예시 |\n| --- | --- | --- |\n| OLTP | 각각의 거래 단위에 초점 | 주문 입력 |\n| OLAP | 각각의 데이터가 쌓인 전체 데이터에 초점 | 데이터의 분석 |\n【 데이터의 OLTP에서 OLAP로 이동 】\n■ EAI(Enterprise Application Integration)\n하나의 기업은 여러 개의 서비스를 보유하고 있지만 서비스 간 연계가 필요할 경우 그 연결 루트는 서비스 수가 증가\n함에 따라 기하급수적으로 증가한다. 따라서 이러한 모든 서비스를 중앙에서 관리한다면 연결 루트가 간소화되는 기업\n애플리케이션 통합이 이뤄진다.\n【 EAI의 서비스 간 연결 구조 】\n■ KMS(Knowledge Management System)\n지식 경영 시스템을 의미하며, 직원 개개인의 지식, 프로젝트 경험, 과거 사례 등 기업이 보유할 수 있는 모든 지식을\n통합해서 문제 해결 능력을 향상시키는 것이 목적이다.\n【 KMS 】\n■ SCM(Supply Chain Management)\n유통 부문의 SCM은 공급망 관리를 의미하며 원자재에서부터 기업을 거쳐 고객에게 도달할 때까지 유통 단계를 최적\n화해서 고객에게 제공하는 것이 목적이다.\n■ ERP(Enterprise Resource Planning)\n제조 부문의 ERP는 경영 자원 통합 관리를 의미하며, 여러 자원 및 업무가 하나로 통합된 시스템으로 재구축해서 어\n느 부서에서 필요로 하는 자원이 있다고 알릴 경우 바로 그 자원에 대한 구매 및 생산이 진행될 수 있도록 도와 업무의\n효율성을 높이는 것이 목적이다.\n■ CRM(Customer Relationship Management)\n제조 부문의 CRM은 고객 관계 관리로서 기업 내 외부적인 분석을 통해 마케팅 측면에서 신규 고객 창출 혹은 기존 고\n객의 이탈을 방지하는 것이 목적이다.\n■ Bl(Business Intelligence)\n제조 부문의 BI는 비즈니스 인텔리전스로 기업의 의사결정 프로세스를 의미한다. 기업의 경영권을 소유한 자가 올바른\n의사결정을 내릴 수 있도록 기업의 데이터를 가공 및 분석하는 것이 목적이다. 가트너는 BI를 '여러 곳에 산재되어 있\n는 데이터를 수집하여 체계적이고 일목요연하게 정리함으로써 사용자가 필요로 하는 정보를 정확한 시간에 제공할 수\n있는 환경'으로 정의하였다.\n[참고] ad hoc report: 비즈니스 이슈에 답하기 위해 신속한 보고서 작성을 위한 BI 도구\n■ RTE(Real Time Enterprise)\n제조 부문의 RTE는 기업의 업무 프로세스에서 발생하는 정보를 실시간으로 통합 및 전달해서 신속한 대응이 가능한\n스피드 경영이다."}
{"first_table":"02 데이터베이스", "second_table":"(1) 데이터베이스 활용", "third_table":"② 산업 부문별 데이터베이스 발전 과정", "contents":"| 제조 부문 | . 데이터베이스 기술의 가장 중요한 적용 분야 2000년대 이전 부품 테이블이나 재고 관리 등 영역에서 활용 2000년대 이후 부품의 설계, 제조, 유통 등 전 공정을 포함하는 범위로 확대 2000년대 초 기업별 고유 시스템 형태로 구축됐다가 이후 솔루션 유형으로 발전 ■ 2000년대 중반 이후 중소기업에 대한 인하우스 DB 구축 투자 증가 ■ 실시간 기업(RTE: Real Time Enterprise)이 대표적 화두: 실시간 기업은 기업의 비즈니스 프로세스를 투명하고 민첩하게 유지하여 환경 변화에 따른 적응 속도를 최대화하여 지연시간을 없애는 정보화 전략 · RTE는 대기업-중소기업 간 협업적 IT화로 그 비중이 점차 확대 ■ 최근 제조 부문의 ERP(전사자원관리, Enterprise Resource Planning) 시스템 도입과 DW, CRM, BI 등 진보된 정보기술을 적용한 기업 내부 인하우스 DB 구축이 주류 |\n| --- | --- |\n| 금융 부문 | 1998년 IMF 이후 금융사 간의 합병이나 지주회사 설립 등을 통해 총체적인 부실을 타파하기 위한 노력이 지속되면서 금융 부문의 업무 프로세스 효율화나 e비즈니스 활성화 및 금융권 통합 시스템 구축 등이 크게 확산 2000년대 초반 EAI, ERP, e-CRM 등 데이터베이스 간 정보 공유 및 통합이나 고객 정보의 전략적 활용이 주된 테마 2000년대 중반 DW를 적극적으로 도입해 관련 DB 마케팅 증대를 위한 노력이 가시화되었고, 대용 량 DW를 위한 최적의 BI 기반 시스템 구축도 급속도로 퍼짐 · 향후 EDW(Enterprise Data Warehouse) 확장이 데이터베이스 시장 확대에 기여 예상 |\n| 유통 부문 | ■ 2000년대 이후 전반적인 IT 변화 환경에 맞물려 CRM과 SCM 구축이 이루어짐 ■ 상거래를 위한 각종 인프라 및 KMS(Knowledge Management System)를 위한 별도의 백업시스템 이 구축됨 2000년대 중반 체계적인 고객정보 수집 + 분석과 상권분석 등으로 심화 ■ 균형성과관리(BSC), 핵심성과지표(KPI), 웹 리포팅 등 다양한 고객 분석 툴을 통해 기존 데이터베이스 와 연계 최근 전자태그(RFID)의 등장은 대량의 상품을 거래하는 유통 부문에 적용되었을 때 파급 효과가 매 우 클 것으로 전망. 향후 이를 지원하는 대용량 데이터베이스를 지원하는 플랫폼이 요구되는 상황 |"}
{"first_table":"02 데이터베이스", "second_table":"(1) 데이터베이스 활용", "third_table":"③ 사회 기반 구조로서의 데이터베이스", "contents":"TIP 각 부문별 사회 기반 구조 데이터베\n이스의 예가 잘못 짝지어진 것을 묻는 문\n제가 출제된 적이 있습니다.\n- ■ 1990년대 사회 각 부문의 정보화가 본격화되며 DB 구축이 활발\n- 하게 추진됐다.\n- ■ 이후 무역, 통관, 물류, 조세, 국세, 조달 등 사회간접자본(SOC) 차원에서 EDI 활용이 본격화되면서\n- 부가가치통신망(VAN)을 통한 정보망이 구축됐다.\n- ■ 지리 · 교통 부문의 데이터베이스는 고도화되고, 의료 · 교육 · 행정 등 사회 각 부문으로 공공 DB의\n- 구축 · 이용이 확대됐다.\n【 부문별 사회 기반 구조 데이터베이스 】\n| 물류 부문 | ■ '실시간 차량 추적'을 위한 종합물류정보망 구축 · CVO 서비스, EDI 서비스, 물류 정보 DB 서비스, 부가서비스로 구성 ■ CALS(Commerce At Light Speed): 제품의 설계 · 개발 1 생산에서 유통 · 폐기에 이르기까지 제품 의 라이프사이클 전반에 관련된 데이터를 통합하고 공유 F 교환할 수 있게 한 경영통합정보시스템 을 말한다. ■ PORT-MIS: 항만운영정보시스템 ■ KROIS: 철도운영정보시스템 |\n| --- | --- |\n| 지리 부문 | ■ GIS 응용에 활용하는 4S 통합기술 ■ 지리정보유통망 가시화: 지리정보 통합관리소 운영, 지리정보 수요자에 정보 제공 ■ GIS(Geographic Information System): 지리정보시스템 · LBS(Location-Based Service): 위치정보서비스 · SIM(Spatial Information Management): 공간정보 관리시스템 |\n| 교통 부문 | · 지능형교통정보시스템(ITS), 교통정보, 기초자료 및 통계 제공, 대국민 서비스 확대 |\n| 의료 부문 | ■ 의료정보시스템: 처방전달시스템, 임상병리, 전자의무기록, 영상처리시스템, 병원의 멀티미디어, 원 격의료, 지식정보화 ■ HL7 국내 표준화 작업에 따라 전국적인 진료 정보 공유 체계 구축 계획 수립 · U헬스 실현에 기존 의료정보 데이터베이스 기반 활용 · PACS(Picture Archiving and Communications System) ■ U-Health(Ubiquitous-Health) |\n| 교육 부문 | · 첨단 정보통신기술(ICT)을 활용한 각종 교육 정보의 개발 및 보급, 정보 활용 교육 · 대학 정보화 및 교육행정 정보화 위주로 사업 추진 · 교육행정정보시스템(NEIS)은 학사뿐만 아니라 기타 교육행정 전 업무를 처리하는 시스템 |"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"① 데이터베이스의 종류", "contents":"TIP 이 부분은 기초 지식이 있을 경우 그냥 넘어가\n도 좋습니다. 비전공자이거나 처음 공부하는 분이라\n면 데이터베이스 기초에 해당하는 내용이므로 한번\n꼭 읽어보기를 권해드립니다.\n- ■ 데이터베이스의 종류는 계층형, 네트워크형, 관계형\n- NoSQL 등 여러 가지가 있으며, 가장 많이 사용하는 관계형 데이터베이스와 NoSQL에 대해서는 반\n- 드시 숙지하기를 권장한다.\n- ■ 관계형 데이터베이스(RDB): 데이터를 행과 열로 이뤄진 테이블에 저장하며, 하나의 열은 하나의 속\n- 성을 나타내고 같은 속성의 값만 가질 수 있다. 데이터 저장 방식은 구조적으로는 엑셀 파일과 유사\n- 하며, 정형 데이터를 다루는 데 특화되어 있다.\n- ■ NoSQL: NoSQL은 'Not only SQL', 'Non SQL 또는 'Non-relational'의 의미로 관계형이 아닌\n- 비관계형을 의미하는 단어에서 생성된 명칭이다. NoSQL은 SQL이 필요없다는 의미가 아니라 기존\n- RDB의 SQL을 보완 및 개선한 비관계형 DB라는 의미를 담고 있다. 비정형 데이터와 대용량의 데이\n- 터 분석 및 분산처리에 용이하다.\n【 RDB와 NoSQL 】\n| RDB | Oracle, MySQL(Oracle), MS-SQL(Microsoft), DB2 Infomix(IBM), MariaDB(Sun Microsystems), Derby(Apache), SQLite(오픈소스) Oracle, DB2 · Infomix 등은 엄밀히 말하면 객체 관계형 DB로 객체지향 개념을 도입한 것으로, 오 늘날에는 많은 RDB가 이러한 객체지향 기능을 포함하고 있다. |\n| --- | --- |\n| NoSQL | ■ Document-Oriented DB: CouchDB, MongoDB, Elasticsearch, Cloudant . Key-Value DB: 아마존의 Dynamo, Redis, Riak, Coherence, SimpleDB · Column-Oriented DB: 구글의 Bigtable, Cassandra, HBase, HyperTable |\n다양한 종류의 데이터베이스에 대해서 알아보자!\n데이터\n- · 계층형 DBMS: 데이터가 부모 자식 형태를 갖도록 관계를 맺어 관리하는 데이터베이스 관리 시스템으로서\n- 중복 문제가 발생하기 쉽다는 단점이 있다.\n- ■ 네트워크형 DBMS: 각 데이터 간의 연결을 통해 네트워크처럼 복잡한 그물 형태로 데이터를 관리하는 데이터베이스\n- 관리 시스템으로서 계층형 DBMS의 중복 문제를 해결했으나 복잡한 구조로 인해 구조 변경에 많은 어려움이 발생한\n- 다는 단점이 있다.\n- · 분산형 DBMS: 분산된 여러 개의 데이터베이스를 하나의 데이터베이스로 인식하고 사용할 수 있는 데이터베이스 관\n- 리 시스템이다.\n- · 객체지향 DBMS: 사용자가 정의하는 타입을 하나의 데이터 유형으로 저장하는 데이터베이스 관리 시스템으로서 구\n- 조가 없는 비정형 데이터라도 사용자가 원하는 방식에 따라 표현 가능하다는 장점이 있다."}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"② SQL의 이해", "contents":"- SQL(Structured Query Language)은 DBMS에서 데이터베이스에 명령을 내리는 데이터베이스의\n- 하부 언어다.\n- SQL은 DB(Oracle, MySQL, MS-SQL 등)마다 문법이 서로 다르지만, 기본적인 데이터 추출과 분\n- 석에 사용되는 문법은 거의 동일하기 때문에 하나의 SQL을 알고 있다면 어렵지 않게 다른 DB에서\n- SQL을 사용할 수 있다.\n- 한국데이터산업진흥원 SQL 교재는 기본적으로 Oracle을 기반으로 하고 있다.\n- SQL 언어는 크게 데이터 정의 언어인 DDL(Data Definition Language)과 데이터 조작 언어인\n- DML(Data Manipulation Language)로 나눌 수 있다. DDL에는 CREATE, ALTER, RENAME,\n- DROP이 있으며, DML에는 INSERT, SELECT, UPDATE, DELETE가 있다.\n【 DDL과 DML 】\n| DDL | 데이터 정의 언어 | ■ CREATE: 데이터베이스 내에 테이블을 생성하는 명령어다. ■ ALTER: 테이블의 정보를 바꾸는 명령어다. · RENAME: 테이블 이름을 변경하는 명령어다. ■ DROP: 테이블을 삭제하는 명령어다. |\n| --- | --- | --- |\n| DML | 데이터 조작 언어 | · SELECT: 테이블에 포함된 데이터를 조회하는 명령어다. ■ INSERT: 테이블에 데이터를 삽입하는 명령어다. · UPDATE: 테이블에 포함된 데이터를 변경하는 명령어다. . DELETE: 테이블에 포함된 데이터를 삭제하는 명령어다. |\n| DCL | 데이터 제어 언어 | · GRANT: DBMS 사용자에게 권한을 부여하기 위한 명령어다. ■ REVOKE: DBMS 사용자로부터 권한을 회수하기 위한 명령어다. |\n| TCL | 트랜잭션 제어 언어 | ■ COMMIT: 사용자에 의해 변경된 데이터를 일괄 적용한다. · SAVEPOINT: 현재 데이터의 상태를 기억한다. ■ ROLLBACK: COMMIT이 되지 않았다면 변경사항들에 대한 명령을 철회하 거나 특정 SAVEPOINT 시점으로 되돌아간다. |"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"SQL 'SELECT' 기본 질의 문법", "contents":"· SQL은 다양한 문법이 존재하지만, 여기서는 기본 질의 문법인 'SELECT'를 중심으로 살펴보기로 한다.\n■ 기본 문법: SELECT (칼럼명) FROM (TABLE명) WHERE (조건절)\n예) SELECT * FROM EMP\nEMP 테이블의 모든 칼럼을 조회(애스터리스크(*)는 모든 칼럼명을 의미)\n예) SELECT * FROM EMP WHERE SAL >= 1000;\nEMP 테이블에서 SAL이 1000 이상인 데이터의 모든 칼럼을 조회\n예) SELECT * FROM EMP WHERE EMPNO IS NOT NULL;\nEMP 테이블에서 EMPNO가 NULL이 아닌 데이터를 조회"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"SQL 'SELECT' 집계 함수 문법", "contents":"- · 집계 함수는 특정 칼럼의 데이터에 대해 데이터의 개수, 합계, 최댓값, 최솟값, 평균 등의 요약값을 구하는 데\n- 사용된다.\n- · 기본 문법: SELECT (칼럼명) FROM (TABLE명) WHERE (조건절) GROUP BY (대상칼럼) HAVING (조건절)\n- · WHERE: 조회 대상을 정의하는 조건절 또는 그룹화할 대상을 정의하는 조건절\n- ■ HAVING: 그룹화된 최종 결과에 대한 조건절\n| EMPNO | JOB | MGR | SAL | DEPTNO |\n| --- | --- | --- | --- | --- |\n| 7369 | CLERK | 7902 | 800 | 20 |\n| 7499 | SALESMAN | 7698 | 1600 | 30 |\n| 7521 | SALESMAN | 7698 | 1250 | 30 |\n| 7566 | MANAGER | 7839 | 2975 | 20 |\n| 7654 | SALESMAN | 7698 | 1250 | 30 |\n| 7698 | MANAGER | 7839 | 2850 | 30 |\n| 7782 | MANAGER | 7839 | 2450 | 10 |\n예) SELECT DEPTNO, COUNT(*) AS COUNT FROM EMP GROUP BY DEPTNO\nEMP 테이블의 각 부서번호(DEPTNO)별 데이터의 개수를 구함\n| DEPTNO | COUNT |\n| --- | --- |\n| 10 | 1 |\n| 20 | 2 |\n| 30 | 4 |\n예) SELECT DEPTNO, SUM(SAL) AS SUM_SAL FROM EMP GROUP BY DEPTNO\nEMP 테이블의 각 부서번호(DEPTNO)별 SAL의 합계를 계산\n| DEPTNO | SUM_SAL |\n| --- | --- |\n| 10 | 2450 |\n| 20 | 3775 |\n| 30 | 6950 |\n예) SELECT DEPTNO, MIN(SAL) MIN_SAL FROM EMP GROUP BY DEPTNO HAVING DEPTNO > 10\nEMP 테이블의 각 부서번호(DEPTNO)별 최소 SAL을 계산한 뒤 부서번호(DEPTNO)가 10보다 큰 부서\n조회\n| DEPTNO | MIN_SAL |\n| --- | --- |\n| 20 | 800 |\n| 30 | 1250 |\n예) SELECT DEPTNO, SUM(SAL) AS SUM_SAL FROM EMP GROUP BY DEPTNO HAVING\nSUM(SAL) <= 3000\nEMP 테이블의 각 부서번호(DEPTNO)별 SAL의 합계를 계산한 뒤 합계 SAL 금액이 3000 이하인 부서\n조회\n| DEPTNO | SUM_SAL |\n| --- | --- |\n| 10 | 2450 |"}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"데이터베이스 구성 요소", "contents":"| ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. | ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. | ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. | ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. | ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. | ■ 인스턴스: 인스턴스란 하나의 객체를 의미하며 존재하는 모두 인스턴스가 될 수 있다. 사람, 동물, 물건 등 모 두 인스턴스로써 표현이 가능하다. |\n| --- | --- | --- | --- | --- | --- |\n| 사람 1 | 장영실 | 남자 | 000101-1234567 | 010-1234-5678 | 발명가 |\n■ 속성: 객체를 표현하기 위해 사용되는 값을 의미한다. 사람이 가질 수 있는 속성의 예로는 이름, 성별, 주민등\n록번호, 직업 등이 있다.\n| 이름 | 성별 | 주민등록번호 | 전화번호 | 직업 |\n| --- | --- | --- | --- | --- |\n· 엔터티: 엔터티는 데이터의 집합을 의미한다. 그러나 실체가 존재하는 테이블과 달리 개념적인 존재로서 개\n념, 장소, 사건 모두 엔터티로 여겨질 수 있다. 엔터티는 2개 이상의 인스턴스와 1개 이상의 속성을 보유하고\n있어야 한다.\n| | 이름 | 성별 | 주민등록번호 | 전화번호 | 직업 |\n| --- | --- | --- | --- | --- | --- |\n| 사람 1 | 장영실 | 남자 | 000101-1234567 | 010-1234-5678 | 발명가 |\n| 사람2 | 홍길동 | 남자 | 000202-2345678 | 010-2345-6789 | 도적 |\n| 사람3 | 임꺽정 | 남자 | 000303-3456789 | 010-3456-7890 | 백정 |\n- · 메타데이터: 사진 파일의 속성 정보를 보면 사진 파일이 언제, 어디서 생성되었는지 알려주는 추가적인 데이\n- 터가 존재하는데, 이처럼 데이터를 설명하는 데이터를 메타데이터라 한다.\n- · 인덱스: 데이터베이스에서 데이터를 저장할 때 내부에서 자동적으로 데이터의 이름을 지정하게 되는데, 이때\n- 부여되는 이름들을 인덱스라 한다. 인덱스는 사용자의 질의에 신속하게 응답하고 정렬하고 탐색할 수 있도록\n- 도와주는 책의 색인과 비슷한 역할을 한다.\n데이터의 집합인 데이터베이스는 엔터티, 속성, 인스턴스 등 여러 요소들로 구성되어 있다."}
{"first_table":"02 데이터베이스", "second_table":"(2) 데이터베이스 종류", "third_table":"데이터 마트(DM)와 데이터 웨어하우스(DW)", "contents":"데이터 마트와 데이터 웨어하우스는 일반적인 개념의 데이터베이스이지만 목적이 조금 다른 형태의 데이터베\n이스다.\n일반적인 데이터베이스는 데이터 유형에 상관없이 정보의 집합체를 의미하지만 데이터의 형태가 USB에 담긴\nCSV 파일, HDD/SSD에 저장된 엑셀 파일, DBMS에 담긴 데이터 또는 클라우드에 업로드된 형태의 여러 가지\n파일이 될 수 있다.\n그러나 데이터 웨어하우스는 이렇게 분산된 환경에 흩어져 있는 데이터들을 개인이나 조직이 총체적인 관점에\n서 의사결정을 위해 공통의 형식으로 변환해 관리하는 역할을 하며, 데이터 마트는 데이터 웨어하우스로부터\n추출된 작은 데이터베이스로서 특정 목표를 달성하는 데 필요한 데이터를 제공하는 역할을 한다."}